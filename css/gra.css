/* === Główny kontener gry === */
main.game-container-main {
    flex-grow: 1; /* Pozwala na rozciągnięcie do dostępnej wysokości */
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #1a1a1a;
    background-image: url('/anime_designe/img/background-team.png');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    width: 100%;
    /* Dodajemy minimalną wysokość, jeśli flex-grow nie zadziała idealnie */
    min-height: calc(100vh - 80px - 60px); /* 100vh - wysokość nagłówka - wysokość stopki (przybliżone wartości) */
}
.game-container-main::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 1;
}
#loader {
    text-align: center;
    color: var(--color-light);
    font-size: 1.8rem;
    transition: opacity 0.5s, visibility 0.5s;
    position: relative;
    z-index: 2;
}
#loader.fade-out { 
    opacity: 0; 
    visibility: hidden; 
    pointer-events: none; 
}
.spinner { 
    border: 4px solid rgba(255,255,255,0.3); 
    width: 36px; 
    height: 36px; 
    border-radius: 50%; 
    border-left-color: var(--color-primary); 
    animation: spin 1s ease infinite; 
    margin: 0 auto 1rem auto; 
}
@keyframes spin { 
    to { transform: rotate(360deg); } 
}
.content-wrapper {
    position: absolute; /* Zmieniamy na absolute, aby mógł swobodnie zajmować przestrzeń */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; /* Rozciągamy na cały game-container-main */
    display: flex; /* Dodajemy flexbox, aby dzieci mogły być elastyczne */
    flex-direction: column; /* Układamy dzieci w kolumnie */
    justify-content: space-between; /* Rozmieszcza elementy na krańcach */
    position: relative; /* Ważne, by jego dzieci mogły być pozycjonowane względem niego */
    z-index: 2;
}
.content-wrapper.hidden {
    display: none; /* Upewniamy się, że to działa */
}

/* === Elementy wideo i gry === */
.video-container {
    position: absolute; /* Ustawiamy na absolute względem content-wrapper */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 3; /* Upewniamy się, że jest nad tłem, ale pod nakładką */
    display: flex; /* Dodajemy flex dla centrowania video */
    justify-content: center;
    align-items: center;
    overflow: hidden; /* Zapobieganie wyciekowi wideo */
}
#video, #overlay {
    position: absolute; /* Zamiast relative do video-container */
    top: 50%;
    left: 50%;
    min-width: 100%;
    min-height: 100%;
    width: auto;
    height: auto;
    transform: translateX(-50%) translateY(-50%) scaleX(-1);
    display: none; /* Domyślnie ukryte, JS je włączy */
}
#overlay { 
    z-index: 5; 
}
.start-game-controls {
    position: absolute; /* Ustawiamy na absolute względem content-wrapper */
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 10;
}
.status {
    position: absolute;
    top: 2rem;
    left: 2rem;
    z-index: 15;
    background: rgba(0,0,0,0.5);
    padding: 0.5rem 1.5rem;
    border-radius: 6px;
    color: var(--color-light);
    font-size: 1.4rem;
    font-weight: 700;
    display: flex;
    align-items: center;
    gap: 1.5rem;
}
.btn-stop {
    position: absolute;
    top: 2rem;
    right: 2rem;
    z-index: 15;
    width: 44px;
    height: 44px;
    padding: 0;
    font-size: 2rem;
    line-height: 1;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #d32f2f;
    border-color: #d32f2f;
    color: var(--color-light);
}
.btn-stop:hover {
    background-color: #b71c1c;
    border-color: #b71c1c;
}

/* === Dolny panel sterowania AI === */
.symbol-section {
    position: relative; /* Zmieniamy na relative, ale wciąż możemy używać flexbox */
    bottom: 0;
    left: 0;
    width: 100%;
    background: rgba(0,0,0,0.75);
    padding: 2rem;
    z-index: 10;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.5rem;
    color: var(--color-light);
    flex-shrink: 0; /* Zapobiega zmniejszaniu się sekcji, jeśli brakuje miejsca */
}
.prediction-area-top { 
    display: flex; 
    flex-direction: column; 
    align-items: center; 
    gap: 1rem; 
    width: 100%; 
}
.prediction { 
    font-size: 2.2rem; 
    font-weight: bold; 
    color: var(--color-light); 
    min-height: 3rem; 
    text-shadow: 1px 1px 2px #000; 
}
.feedback { 
    display: flex; 
    gap: 1rem; 
    flex-wrap: wrap; 
    justify-content: center; 
    align-items: center; 
}
.buttons-control-line { 
    display: flex; 
    align-items: center; 
    gap: 1.5rem; 
    flex-wrap: wrap; 
    justify-content: center; 
}
.symbol-section button:not(.btn-primary):not(.btn-stop) {
    border-color: var(--color-light);
    color: var(--color-light);
    background: transparent;
}
.symbol-section button:not(.btn-primary):not(.btn-stop):hover {
    background: var(--color-light);
    color: var(--color-dark);
}
.add-label { 
    font-size: 1.8rem; 
    font-weight: 700; 
    color: var(--color-light); 
    margin-left: 1rem; 
}
.classes { 
    display: flex; 
    gap: 1rem; 
    flex-wrap: wrap; 
    justify-content: center; 
}
.classes button { 
    padding: 0.8rem 1.5rem; 
    font-size: 1.6rem; 
}
.gallery-container { 
    display: none; 
}
.face-prompt {
    color: var(--color-light);
    font-size: 1.4rem;
    text-align: center;
}

/* === Komunikaty Toast === */
#toast-container { 
    position: fixed; 
    top: 90px; 
    right: 20px; 
    z-index: 1000; 
}
.toast { 
    padding: 1.5rem; 
    border-radius: 8px; 
    color: var(--color-light); 
    margin-bottom: 1rem; 
    animation: slideIn 0.5s forwards; 
    box-shadow: 0 3px 10px rgba(0,0,0,0.2); 
}
.toast.info { 
    background-color: #0277bd; 
}
.toast.error { 
    background-
